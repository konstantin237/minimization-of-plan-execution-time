"use strict";function _regeneratorValues(t){if(null!=t){var e=t["function"==typeof Symbol&&Symbol.iterator||"@@iterator"],r=0;if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length))return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}}}throw new TypeError(_typeof(t)+" is not iterable")}function _regenerator(){var v,p,t="function"==typeof Symbol?Symbol:{},e=t.iterator||"@@iterator",r=t.toStringTag||"@@toStringTag";function n(t,e,r,n){var a,i,o,l,u,c,s,f,h,y=e&&e.prototype instanceof b?e:b,d=Object.create(y.prototype);return _regeneratorDefine2(d,"_invoke",(a=t,i=r,s=n||[],f=!1,h={p:c=0,n:0,v:v,a:m,f:m.bind(v,4),d:function(t,e){return o=t,l=0,u=v,h.n=e,g}},function(t,e,r){if(1<c)throw TypeError("Generator is already running");for(f&&1===e&&m(e,r),l=e,u=r;(p=l<2?v:u)||!f;){o||(l?l<3?(1<l&&(h.n=-1),m(l,u)):h.n=u:h.v=u);try{if(c=2,o){if(l||(t="next"),p=o[t]){if(!(p=p.call(o,u)))throw TypeError("iterator result is not an object");if(!p.done)return p;u=p.value,l<2&&(l=0)}else 1===l&&(p=o.return)&&p.call(o),l<2&&(u=TypeError("The iterator does not provide a '"+t+"' method"),l=1);o=v}else if((p=(f=h.n<0)?u:a.call(i,h))!==g)break}catch(t){o=v,l=1,u=t}finally{c=1}}return{value:p,done:f}}),!0),d;function m(t,e){for(l=t,u=e,p=0;!f&&c&&!r&&p<s.length;p++){var r,n=s[p],a=h.p,i=n[2];3<t?(r=i===e)&&(l=n[4]||3,u=n[5]===v?n[3]:n[5],n[4]=3,n[5]=v):n[0]<=a&&((r=t<2&&a<n[1])?(l=0,h.v=e,h.n=n[1]):a<i&&(r=t<3||n[0]>e||i<e)&&(n[4]=t,n[5]=e,h.n=i,l=0))}if(r||1<t)return g;throw f=!0,e}}var g={};function b(){}function a(){}function i(){}p=Object.getPrototypeOf;var o=[][e]?p(p([][e]())):(_regeneratorDefine2(p={},e,function(){return this}),p),l=i.prototype=b.prototype=Object.create(o);function u(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,i):(t.__proto__=i,_regeneratorDefine2(t,r,"GeneratorFunction")),t.prototype=Object.create(l),t}return _regeneratorDefine2(l,"constructor",a.prototype=i),_regeneratorDefine2(i,"constructor",a),_regeneratorDefine2(i,r,a.displayName="GeneratorFunction"),_regeneratorDefine2(l),_regeneratorDefine2(l,r,"Generator"),_regeneratorDefine2(l,e,function(){return this}),_regeneratorDefine2(l,"toString",function(){return"[object Generator]"}),(_regenerator=function(){return{w:n,m:u}})()}function _regeneratorDefine2(t,e,r,n){var i=Object.defineProperty;try{i({},"",{})}catch(t){i=0}(_regeneratorDefine2=function(t,e,r,n){if(e)i?i(t,e,{value:r,enumerable:!n,configurable:!n,writable:!n}):t[e]=r;else{var a=function(e,r){_regeneratorDefine2(t,e,function(t){return this._invoke(e,r,t)})};a("next",0),a("throw",1),a("return",2)}})(t,e,r,n)}function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_unsupportedIterableToArray(t)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArray(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}function _arrayWithoutHoles(t){if(Array.isArray(t))return _arrayLikeToArray(t)}function _createForOfIteratorHelper(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=_unsupportedIterableToArray(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,a=function(){};return{s:a,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,o=!0,l=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){l=!0,i=t},f:function(){try{o||null==r.return||r.return()}finally{if(l)throw i}}}}function _unsupportedIterableToArray(t,e){if(t){if("string"==typeof t)return _arrayLikeToArray(t,e);var r={}.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(t,e):void 0}}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=Array(e);r<e;r++)n[r]=t[r];return n}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,_toPropertyKey(n.key),n)}}function _createClass(t,e,r){return e&&_defineProperties(t.prototype,e),r&&_defineProperties(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function _toPropertyKey(t){var e=_toPrimitive(t,"string");return"symbol"==_typeof(e)?e:e+""}function _toPrimitive(t,e){if("object"!=_typeof(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0===r)return("string"===e?String:Number)(t);var n=r.call(t,e||"default");if("object"!=_typeof(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}var AssignmentModel=function(){function w(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:3;_classCallCheck(this,w),this.size=t,this.C=Array.from({length:t},function(){return Array(t).fill(0)}),this.T=Array.from({length:t},function(){return Array(t).fill(0)}),this.S=0,this.T_type="min",this.T_limit=""}return _createClass(w,[{key:"setMatrixC",value:function(t){this.C=t}},{key:"setMatrixT",value:function(t){this.T=t}},{key:"setS",value:function(t){this.S=t}},{key:"setTType",value:function(t){this.T_type=t}},{key:"setTLimit",value:function(t){this.T_limit=t}},{key:"solve",value:function(t){var e,r=this,n=0<arguments.length&&void 0!==t?t:{},a=this.size,i=Array.from({length:a},function(t,e){return e}),o=[],l=null,u=_createForOfIteratorHelper(w.permutations(i));try{for(u.s();!(e=u.n()).done;){for(var c=e.value,s=0,f=[],h=[],y=0;y<a;y++){var d=this.C[y][c[y]],m=this.T[y][c[y]];s+=d,f.push(m),h.push({worker:y+1,job:c[y]+1,c:d,t:m})}var v="min"===this.T_type?Math.max.apply(Math,f):Math.min.apply(Math,f),p=!0;if(this.S&&s>this.S&&(p=!1),n.skipIncreasingTime){if(null!==l&&l<v)continue;l=v}n.hideInvalidSolutions&&!p||o.push({perm:c,sumC:s,T_value:v,table:h,valid:p})}}catch(t){u.e(t)}finally{u.f()}var g=o.filter(function(t){return t.valid});if(""!==this.T_limit&&(g="min"===this.T_type?g.filter(function(t){return t.T_value<=r.T_limit}):g.filter(function(t){return t.T_value>=r.T_limit})),0===g.length)return{answer:"Нет допустимых решений",solutions:o};var b=Math.min.apply(Math,_toConsumableArray(g.map(function(t){return t.T_value}))),T=g.filter(function(t){return t.T_value===b}),_=Math.min.apply(Math,_toConsumableArray(T.map(function(t){return t.sumC}))),x=T.filter(function(t){return t.sumC===_});return{answer:1===x.length?x[0]:x,solutions:o}}}],[{key:"permutations",value:function(t){if(1===t.length)return[t];for(var e=[],r=0;r<t.length;r++){var n,a=t.slice(0,r).concat(t.slice(r+1)),i=_createForOfIteratorHelper(w.permutations(a));try{for(i.s();!(n=i.n()).done;){var o=n.value;e.push([t[r]].concat(o))}}catch(t){i.e(t)}finally{i.f()}}return e}}])}(),AssignmentView=function(){return _createClass(function t(){_classCallCheck(this,t),this.matrixCTextarea=document.getElementById("matrix-c-textarea"),this.matrixTTextarea=document.getElementById("matrix-t-textarea"),this.syncTextareas()},[{key:"syncTextareas",value:function(){var t=this.matrixCTextarea,e=this.matrixTTextarea;function r(t,e){e.style.height=t.style.height}t&&e&&(t.addEventListener("input",function(){t.style.height="auto",t.style.height=t.scrollHeight+"px",r(t,e)}),e.addEventListener("input",function(){e.style.height="auto",e.style.height=e.scrollHeight+"px",r(e,t)}),setTimeout(function(){t.style.height="auto",e.style.height="auto",t.style.height=t.scrollHeight+"px",e.style.height=e.scrollHeight+"px",t.scrollHeight>e.scrollHeight?e.style.height=t.style.height:t.style.height=e.style.height},0))}},{key:"parseMatrixFromTextarea",value:function(t){var e=t.trim().split("\n").filter(function(t){return""!==t.trim()}).map(function(t){return t.trim().split(/\s+/).map(Number)}),r=e.map(function(t){return t.length}),n=r.every(function(t){return t===r[0]});return{matrix:e,size:e.length,isSquare:n&&e.length===r[0]}}},{key:"getParams",value:function(){return{S:+document.getElementById("salary-fund").value,T_type:document.getElementById("t-type").value,T_limit:""===document.getElementById("t-limit").value?"":+document.getElementById("t-limit").value,skipIncreasingTime:document.getElementById("skip-increasing-time").checked,hideInvalidSolutions:document.getElementById("hide-invalid-solutions").checked}}},{key:"getMatrixC",value:function(){return this.matrixCTextarea?this.parseMatrixFromTextarea(this.matrixCTextarea.value):{matrix:[],size:0,isSquare:!1}}},{key:"getMatrixT",value:function(){return this.matrixTTextarea?this.parseMatrixFromTextarea(this.matrixTTextarea.value):{matrix:[],size:0,isSquare:!1}}},{key:"renderAnswer",value:function(e,n){var t=document.getElementById("answer");if("string"!=typeof e){if(Array.isArray(e)){var a="";return e.forEach(function(e){var t=n.findIndex(function(t){return JSON.stringify(t.perm)===JSON.stringify(e.perm)});a+="<b>Решение №".concat(t+1,"</b>"),a+="<table><thead><tr><th></th><th><b>Решение</b></th></tr></thead><tbody>";for(var r=0;r<e.perm.length;r++)a+="<tr><th>x".concat(r+1,"</th><td>").concat(e.perm[r]+1," (C: ").concat(e.table[r].c,", T: ").concat(e.table[r].t,")</td></tr>");a+="<tr><th>S</th><td>".concat(e.sumC,"</td></tr>"),a+="<tr><th>T</th><td>".concat(e.T_value,"</td></tr>"),a+="</tbody></table>"}),void(t.innerHTML=a)}var r=n.findIndex(function(t){return JSON.stringify(t.perm)===JSON.stringify(e.perm)}),i="<b>Решение №".concat(r+1,"</b>");i+="<table><thead><tr><th></th><th><b>Решение</b></th></tr></thead><tbody>";for(var o=0;o<e.perm.length;o++)i+="<tr><th>x".concat(o+1,"</th><td>").concat(e.perm[o]+1," (C: ").concat(e.table[o].c,", T: ").concat(e.table[o].t,")</td></tr>");i+="<tr><th>S</th><td>".concat(e.sumC,"</td></tr>"),i+="<tr><th>T</th><td>".concat(e.T_value,"</td></tr>"),i+="</tbody></table>",t.innerHTML=i}else t.textContent=e}},{key:"renderSolutionTable",value:function(t){var e=document.getElementById("solution-table");if(t&&0!==t.length){var r=t[0].perm.length,i="<table><thead><tr><th></th>";t.forEach(function(t,e){i+="<th".concat(t.valid?"":' style="opacity:0.5"',">Решение № ").concat(e+1,"</th>")}),i+="</tr></thead><tbody>";for(var n=function(a){i+="<tr><th>x".concat(a+1,"</th>"),t.forEach(function(t){var e=t.perm[a],r=t.table[a].c,n=t.table[a].t;i+="<td".concat(t.valid?"":' style="opacity:0.5"',">").concat(e+1," (C: ").concat(r,", T: ").concat(n,")</td>")}),i+="</tr>"},a=0;a<r;a++)n(a);i+="<tr><th>S</th>",t.forEach(function(t){i+="<td".concat(t.valid?"":' style="opacity:0.5"',">").concat(t.sumC,"</td>")}),i+="</tr>",i+="<tr><th>T</th>",t.forEach(function(t){i+="<td".concat(t.valid?"":' style="opacity:0.5"',">").concat(t.T_value,"</td>")}),i+="</tr>",i+="</tbody></table>",e.innerHTML=i}else e.innerHTML=""}},{key:"renderFullEnumeration",value:function(n,a,t){var l=_regenerator().m(s),i=n.length;if(!i||n.some(function(t){return t.length!==i}))return"<div>Матрица должна быть квадратной</div>";var e,r,o=Array.from({length:i},function(t,e){return e}),u=[],c=[];function s(e,r,n){var a,i,o;return _regenerator().w(function(t){for(;;)switch(t.n){case 0:if(r===n)return t.n=1,e.slice();t.n=2;break;case 1:t.n=6;break;case 2:a=r;case 3:if(a<=n)return i=[e[a],e[r]],e[r]=i[0],e[a]=i[1],t.d(_regeneratorValues(s(e,r+1,n)),4);t.n=6;break;case 4:o=[e[a],e[r]],e[r]=o[0],e[a]=o[1];case 5:a++,t.n=3;break;case 6:return t.a(2)}},l)}var f,h=_createForOfIteratorHelper(s(o,0,i-1));try{for(h.s();!(f=h.n()).done;){for(var y=f.value,d=0,m=[],v=0;v<i;v++)d+=n[v][y[v]],m.push(a[v][y[v]]);var p="min"===t.T_type?Math.max.apply(Math,m):Math.min.apply(Math,m);c.push({perm:y.slice(),sumC:d,Tval:p})}}catch(t){h.e(t)}finally{h.f()}e=Math.min.apply(Math,_toConsumableArray(c.map(function(t){return t.Tval})));var g=c.filter(function(t){return t.Tval===e});if(r=Math.min.apply(Math,_toConsumableArray(g.map(function(t){return t.sumC}))),!(u=g.filter(function(t){return t.sumC===r})).length)return"<div>Нет решений</div>";var b="<h3>Полный перебор</h3>";return u.forEach(function(t,e){b+="<b>Решение №".concat(e+1,"</b>"),b+="<table><thead><tr><th></th><th>Назначение</th></tr></thead><tbody>";for(var r=0;r<i;r++)b+="<tr><th>x".concat(r+1,"</th><td>").concat(t.perm[r]+1," (C: ").concat(n[r][t.perm[r]],", T: ").concat(a[r][t.perm[r]],")</td></tr>");b+="<tr><th>S</th><td>".concat(t.sumC,"</td></tr>"),b+="<tr><th>T</th><td>".concat(t.Tval,"</td></tr>"),b+="</tbody></table>"}),b+="<details><summary>Ход решения</summary>",b+="<table><thead><tr><th>Перестановка</th><th>S</th><th>T</th></tr></thead><tbody>",c.forEach(function(t){b+="<tr><td>".concat(t.perm.map(function(t){return t+1}).join("-"),"</td><td>").concat(t.sumC,"</td><td>").concat(t.Tval,"</td></tr>")}),b+="</tbody></table></details>"}}])}(),AssignmentController=function(){return _createClass(function t(){_classCallCheck(this,t),this.model=null,this.view=new AssignmentView,this.initEvents(),this.initPresetButtons()},[{key:"initEvents",value:function(){var t=this;document.getElementById("solve-btn").addEventListener("click",function(){return t.solve()})}},{key:"initPresetButtons",value:function(){var t=document.getElementById("matrix-c-textarea"),e=document.getElementById("matrix-t-textarea"),r=document.getElementById("salary-fund");document.getElementById("fill-default").addEventListener("click",function(){t.value="3 4 5 8 3\n2 9 6 7 8\n5 1 8 5 2\n8 9 6 4 3\n3 2 5 7 9",e.value="7 6 5 2 7\n8 1 4 3 2\n5 9 2 5 8\n2 1 4 6 7\n7 8 5 3 1",r.value=33,t.dispatchEvent(new Event("input")),e.dispatchEvent(new Event("input"))}),document.getElementById("fill-test").addEventListener("click",function(){t.value="2 2 2\n2 2 2\n2 2 2",e.value="1 1 2\n1 2 1\n2 1 1",r.value=6,t.dispatchEvent(new Event("input")),e.dispatchEvent(new Event("input"))}),document.getElementById("clear-all").addEventListener("click",function(){t.value="",e.value="",r.value="",t.dispatchEvent(new Event("input")),e.dispatchEvent(new Event("input"))})}},{key:"solve",value:function(){var t=this.view.getMatrixC(),e=t.matrix,r=t.size,n=(t.isSquare,this.view.getMatrixT()),a=n.matrix,i=n.size;window.assignmentModelInputC=e,window.assignmentModelInputT=a;var o=Math.min(r,i);if(!o||e.length!==o||a.length!==o)return this.view.renderAnswer("Ошибка: некорректный ввод матриц"),void this.view.renderSolutionTable([]);this.model=new AssignmentModel(o),this.model.setMatrixC(e),this.model.setMatrixT(a);var l=this.view.getParams();this.model.setS(l.S),this.model.setTType(l.T_type),this.model.setTLimit(l.T_limit);var u=this.model.solve(l),c=u.answer,s=u.solutions;this.view.renderAnswer(c.answer||c,s),this.view.renderSolutionTable(s)}}])}();window.addEventListener("DOMContentLoaded",function(){new AssignmentController});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
